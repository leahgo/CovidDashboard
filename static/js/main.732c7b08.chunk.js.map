{"version":3,"sources":["Components/DecideCntChart.js","Components/Card.js","Components/Covid.presenter.js","Test.xml","Components/Covid.js","App.js","reportWebVitals.js","index.js"],"names":["DecideCntChart","props","width","height","data","decideCntArr","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","type","stroke","Card","console","log","className","Covid","useState","setData","useEffect","fetch","TestData","then","r","text","items","DOMParser","parseFromString","getElementsByTagName","i","length","push","x","Number","innerHTML","trim","replaceAll","substring","y","reverse","map","d","splice","indexOf","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAuCeA,EA3BQ,SAACC,GAQtB,OACE,8BACE,eAAC,IAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,KAAMH,EAAMI,aACZC,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GAJjD,UAME,cAAC,IAAD,CAAeC,gBAAgB,QAC/B,cAAC,IAAD,CAAOC,QAAQ,MACf,cAAC,IAAD,CAAOA,QAAQ,IAAIC,OAAQ,CAAC,OAAQ,UACpC,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAMC,KAAK,WAAWF,QAAQ,IAAIG,OAAO,kBCClCC,EA9BF,SAACf,GAUZ,OAJAgB,QAAQC,IAAI,OAAQjB,EAAMI,cAKxB,qBAAKc,UAAU,QAAf,SACE,cAAC,EAAD,CAAgBd,aAAcJ,EAAMI,kBCsB3Be,EAlCD,SAACnB,GAGb,OAFAgB,QAAQC,IAAI,YAAajB,EAAMI,cAG7B,sBAAKc,UAAU,OAAf,UACE,qBAAKA,UAAU,UAAf,SACE,4CAEF,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CAAMd,aAAcJ,EAAMI,qBCbnB,MAA0B,iCC2F1Be,EAvFD,WAAO,IAAD,EACMC,mBAAS,MADf,mBACXjB,EADW,KACLkB,EADK,KAEZjB,EAAegB,mBAAS,IA8E9B,OA3EAE,qBAAU,WAGRC,MAAMC,GACHC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACE,GAELN,EAAQM,GACR,IACMC,GADM,IAAIC,WAAYC,gBAAgB3B,EAAM,YAChC4B,qBAAqB,QAEvCf,QAAQC,IAAI,QAASW,GAErB,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAChC5B,EAAa8B,KAAK,CAChBC,EAAGC,OACDR,EAAMI,GACHD,qBAAqB,YAAY,GACjCM,UAAUC,OACVC,WAAW,IAAK,IAChBC,UAAU,EAAG,IAElBC,EAAGL,OACDR,EAAMI,GAAGD,qBAAqB,aAAa,GAAGM,UAAUC,UAK9DlC,EAAasC,UAEbtC,EAAauC,KAAI,SAACC,GACA,iBAALA,GACTxC,EAAayC,OAAOzC,EAAa0C,QAAQF,YAUhD,CAACzC,EAAMC,IAiCH,cAAC,EAAD,CAAgBA,aAAcA,K,uBCpExB2C,MAXf,WACE,OACE,cAAC,IAAD,UAEE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW/B,OCG/BgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.732c7b08.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n} from \"recharts\";\n\nconst DecideCntChart = (props) => {\n  // console.log(\"decideCntChart\", props.decideCntArr);\n  // const myData = [\n  //   { x: \"A\", y: 10 },\n  //   { x: \"B\", y: 5 },\n  //   { x: \"C\", y: 15 },\n  // ];\n\n  return (\n    <div>\n      <LineChart\n        width={900}\n        height={500}\n        data={props.decideCntArr}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"x\" />\n        <YAxis dataKey=\"y\" domain={[\"auto\", \"auto\"]} />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" />\n      </LineChart>\n    </div>\n  );\n};\n\nexport default DecideCntChart;\n","import React from \"react\";\nimport \"./Card.css\";\nimport DecideCntChart from \"./DecideCntChart\";\n\nconst Card = (props) => {\n  const myData = [\n    { x: \"A\", y: 10 },\n    { x: \"B\", y: 5 },\n    { x: \"C\", y: 15 },\n  ];\n  console.log(\"Card\", props.decideCntArr);\n  //   const [decideCntArray, setDecideCntArray] = useState([]);\n  //   console.log(accDefRate);\n\n  return (\n    <div className=\"Cards\">\n      <DecideCntChart decideCntArr={props.decideCntArr} />\n      {/* <div className=\"Date\">{props.createDt}</div>\n      {props.accDefRate}\n      {props.accExamCnt}\n      {props.accExamCompCnt}\n      {props.careCnt}\n      {props.clearCnt}\n      {props.deathCnt}\n      {props.decideCnt}\n      {props.examCnt}\n      {props.seq}\n      {props.stateDt}\n      {props.stateTime}\n      {props.updateDt} */}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./Covid.css\";\nimport Card from \"./Card\";\n\nconst Covid = (props) => {\n  console.log(\"presenter\", props.decideCntArr);\n  // console.log(data);\n  return (\n    <div className=\"Main\">\n      <div className=\"Toolbar\">\n        <h1>Covid 19</h1>\n      </div>\n      <div className=\"Content\">\n        <Card decideCntArr={props.decideCntArr} />\n        {/* {data.map((d) => {\n          return (\n            <Card\n              accDefRate={d.accDefRate}\n              accExamCnt={d.accExamCnt}\n              accExamCompCnt={d.accExamCompCnt}\n              careCnt={d.careCnt}\n              clearCnt={d.clearCnt}\n              createDt={d.createDt}\n              deathCnt={d.deathCnt}\n              decideCnt={d.decideCnt}\n              examCnt={d.examCnt}\n              key={d.seq}\n              stateDt={d.stateDt}\n              stateTime={d.stateTime}\n              updateDt={d.updateDt}\n            />\n          );\n        })} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Covid;\n","export default __webpack_public_path__ + \"static/media/Test.ace614fd.xml\";","import React, { useState, useEffect } from \"react\";\nimport CovidPresenter from \"./Covid.presenter\";\nimport TestData from \"../Test.xml\";\n\nconst Covid = () => {\n  const [data, setData] = useState(null);\n  const decideCntArr = useState([]);\n  // const [decideCntArr, setDecideCntArr] = useState([]);\n\n  useEffect(() => {\n    // setData(TestData);\n\n    fetch(TestData)\n      .then((r) => r.text())\n      .then((text) => {\n        // console.log(text);\n        setData(text);\n        const doc = new DOMParser().parseFromString(data, \"text/xml\");\n        const items = doc.getElementsByTagName(\"item\");\n\n        console.log(\"items\", items);\n\n        for (let i = 0; i < items.length; i++) {\n          decideCntArr.push({\n            x: Number(\n              items[i]\n                .getElementsByTagName(\"createDt\")[0]\n                .innerHTML.trim()\n                .replaceAll(\"-\", \"\")\n                .substring(0, 8)\n            ),\n            y: Number(\n              items[i].getElementsByTagName(\"decideCnt\")[0].innerHTML.trim()\n            ),\n          });\n        }\n\n        decideCntArr.reverse();\n\n        decideCntArr.map((d) => {\n          if (typeof d != \"object\")\n            decideCntArr.splice(decideCntArr.indexOf(d));\n          // return ;\n        });\n\n        // decideCntArr = tmpArr.reverse();\n        // setDecideCntArr(tmpArr.reverse());\n        // console.log(\"tmparr\", tmpArr);\n      });\n\n    // console.log(decideCntArr);\n  }, [data, decideCntArr]);\n\n  // useEffect(() => {\n  //   const objs = [];\n  //   const doc = new DOMParser().parseFromString(data, \"text/xml\");\n  //   const items = doc.getElementsByTagName(\"item\");\n\n  //   for (let i = 0; i < items.length; i++) {\n  //     decideCntArr.push(\n  //       items[i].getElementsByTagName(\"decideCnt\")[0].innerHTML\n  //     );\n\n  //     // objs.push({\n  //     //   accDefRate: items[i].getElementsByTagName(\"accDefRate\")[0].innerHTML,\n  //     //   accExamCnt: items[i].getElementsByTagName(\"accExamCnt\")[0].innerHTML,\n  //     //   accExamCompCnt: items[i].getElementsByTagName(\"accExamCompCnt\")[0]\n  //     //     .innerHTML,\n  //     //   careCnt: items[i].getElementsByTagName(\"careCnt\")[0].innerHTML,\n  //     //   clearCnt: items[i].getElementsByTagName(\"clearCnt\")[0].innerHTML,\n  //     //   createDt: items[i].getElementsByTagName(\"createDt\")[0].innerHTML,\n  //     //   deathCnt: items[i].getElementsByTagName(\"deathCnt\")[0].innerHTML,\n  //     //   decideCnt: items[i].getElementsByTagName(\"decideCnt\")[0].innerHTML,\n  //     //   examCnt: items[i].getElementsByTagName(\"examCnt\")[0].innerHTML,\n  //     //   seq: items[i].getElementsByTagName(\"seq\")[0].innerHTML,\n  //     //   stateDt: items[i].getElementsByTagName(\"stateDt\")[0].innerHTML,\n  //     //   stateTime: items[i].getElementsByTagName(\"stateTime\")[0].innerHTML,\n  //     //   updateDt: items[i].getElementsByTagName(\"updateDt\")[0].innerHTML,\n  //     // });\n  //   }\n\n  //   setResult(objs);\n  // }, []);\n\n  return <CovidPresenter decideCntArr={decideCntArr} />;\n};\n\n// Covid.propTypes = {\n//   accDefRate: PropTypes.number.isRequired,\n// };\n\nexport default Covid;\n","import React from \"react\";\nimport Covid from \"./Components/Covid\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      {/* <Toolbar /> */}\n      <Route path=\"/\" exact={true} component={Covid} />\n      {/* <Route path=\"/about\" component={About} /> */}\n      {/* <Route path=\"/movie-detail\" component={Detail} /> */}\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}