{"version":3,"sources":["Components/Chart.js","Components/Covid.presenter.js","Components/Covid.js","App.js","reportWebVitals.js","index.js"],"names":["DecideCntChart","props","className","width","height","data","strokeDasharray","dataKey","domain","type","stroke","name","Covid","useState","Date","startDt","setStartDt","endDt","setEndDt","onChange","value","onClick","handleButtonClick","setData","a","console","log","tmpArr","axios","get","url","response","body","items","item","reverse","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAwDeA,EA3CQ,SAACC,GACtB,OACE,qBAAKC,UAAU,QAAf,SACE,eAAC,IAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,KAAMJ,EAAMI,KAHd,UAME,cAAC,IAAD,CAAeC,gBAAgB,QAC/B,cAAC,IAAD,CAAOC,QAAQ,UAAUC,OAAQ,CAAC,OAAQ,UAC1C,cAAC,IAAD,CAAOA,OAAQ,CAAC,OAAQ,UACxB,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,YACRG,OAAO,UACPC,KAAK,8BAEP,cAAC,IAAD,CACEF,KAAK,WACLF,QAAQ,WACRG,OAAO,UACPC,KAAK,oCAEP,cAAC,IAAD,CACEF,KAAK,WACLF,QAAQ,UACRG,OAAO,UACPC,KAAK,oCAEP,cAAC,IAAD,CACEF,KAAK,WACLF,QAAQ,UACRG,OAAO,UACPC,KAAK,iD,iBCnBAC,EA1BD,SAACX,GAAW,IAAD,EACOY,mBAAS,IAAIC,MADpB,mBAChBC,EADgB,KACPC,EADO,OAEGH,mBAAS,IAAIC,MAFhB,mBAEhBG,EAFgB,KAETC,EAFS,KAIvB,OACE,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,UAAf,SACE,4CAEF,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CACES,KAAK,gBACLQ,SAAUH,EACVI,MAAOL,IAJX,IAOE,cAAC,IAAD,CAAYJ,KAAK,cAAcQ,SAAUD,EAAUE,MAAOH,IAC1D,wBAAQI,QAASpB,EAAMqB,kBAAvB,uBAEF,cAAC,EAAD,CAAOjB,KAAMJ,EAAMI,c,2BCkBZO,EArCD,WAAO,IAAD,EACMC,mBAAS,IADf,mBACXR,EADW,KACLkB,EADK,KAEZD,EAAiB,uCAAG,8BAAAE,EAAA,6DACxBC,QAAQC,IAAI,WAEV,gFAEA,+FACW,IACG,KACI,WACF,WACdC,EAAS,GAVW,UAYDC,IAAMC,IAC3BC,2PAbsB,QAYlBC,EAZkB,OAyBxBN,QAAQC,IAAIK,EAAS1B,KAAK0B,SAASC,KAAKC,MAAMC,OAC9CP,EAASI,EAAS1B,KAAK0B,SAASC,KAAKC,MAAMC,MACpCC,UACPZ,EAAQI,GA5BgB,4CAAH,qDAgCvB,OAAO,cAAC,EAAD,CAAgBtB,KAAMA,EAAMiB,kBAAmBA,K,uBCvBzCc,MAXf,WACE,OACE,cAAC,IAAD,UAEE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,OCG/B4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b90baded.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Chart.css\";\n\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n} from \"recharts\";\n\nconst DecideCntChart = (props) => {\n  return (\n    <div className=\"Chart\">\n      <LineChart\n        width={900}\n        height={500}\n        data={props.data}\n        // margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"stateDt\" domain={[\"auto\", \"auto\"]} />\n        <YAxis domain={[\"auto\", \"auto\"]} />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"decideCnt\"\n          stroke=\"#8884d8\"\n          name=\"확진자 수\"\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"clearCnt\"\n          stroke=\"#003882\"\n          name=\"격리해제 수\"\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"examCnt\"\n          stroke=\"#007682\"\n          name=\"검사진행 수\"\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"careCnt\"\n          stroke=\"#985993\"\n          name=\"치료중 환자 수\"\n        />\n      </LineChart>\n    </div>\n  );\n};\n\nexport default DecideCntChart;\n","import React, { useState } from \"react\";\nimport \"./Covid.css\";\nimport Chart from \"./Chart\";\nimport DatePicker from \"react-date-picker\";\nconst Covid = (props) => {\n  const [startDt, setStartDt] = useState(new Date());\n  const [endDt, setEndDt] = useState(new Date());\n\n  return (\n    <div className=\"Main\">\n      <div className=\"Toolbar\">\n        <h1>Covid 19</h1>\n      </div>\n      <div className=\"Content\">\n        <div className=\"Date\">\n          <DatePicker\n            name=\"startCreateDt\"\n            onChange={setStartDt}\n            value={startDt}\n          />\n          ~\n          <DatePicker name=\"endCreateDt\" onChange={setEndDt} value={endDt} />\n          <button onClick={props.handleButtonClick}>Submit</button>\n        </div>\n        <Chart data={props.data} />\n      </div>\n    </div>\n  );\n};\n\nexport default Covid;\n","import React, { useState } from \"react\";\nimport CovidPresenter from \"./Covid.presenter\";\nimport \"./DatePicker.css\";\nimport axios from \"axios\";\n\nconst Covid = () => {\n  const [data, setData] = useState([]);\n  const handleButtonClick = async () => {\n    console.log(\"clicked\");\n    const url =\n      \"http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson\";\n    const ServiceKey =\n      \"pazBdlMEQ8jBn1ovS4UfBWEMzypVRd5jPd887GygCIAQWJYJWbzAcAn3w5jaYyPN3lwpX69kUb6dl3rbeMgAww%3D%3D\";\n    let pageNo = \"1\";\n    let numOfRows = \"10\";\n    let startCreateDt = \"20200101\";\n    let endCreateDt = \"20201130\";\n    let tmpArr = [];\n\n    const response = await axios.get(\n      url +\n        \"?ServiceKey=\" +\n        ServiceKey +\n        \"&pageNo=\" +\n        pageNo +\n        \"&numOfRows=\" +\n        numOfRows +\n        \"&startCreateDt=\" +\n        startCreateDt +\n        \"&endCreateDt=\" +\n        endCreateDt\n    );\n    console.log(response.data.response.body.items.item);\n    tmpArr = response.data.response.body.items.item;\n    tmpArr.reverse();\n    setData(tmpArr);\n    // console.log(\"data\", data);\n  };\n\n  return <CovidPresenter data={data} handleButtonClick={handleButtonClick} />;\n};\n\nexport default Covid;\n","import React from \"react\";\nimport Covid from \"./Components/Covid\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      {/* <Toolbar /> */}\n      <Route path=\"/\" exact={true} component={Covid} />\n      {/* <Route path=\"/about\" component={About} /> */}\n      {/* <Route path=\"/movie-detail\" component={Detail} /> */}\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}