[{"/Users/leahko/react-workspace/covid-dashboard/src/App.js":"1","/Users/leahko/react-workspace/covid-dashboard/src/reportWebVitals.js":"2","/Users/leahko/react-workspace/covid-dashboard/src/Components/Covid.presenter.js":"3","/Users/leahko/react-workspace/covid-dashboard/src/Components/Covid.js":"4","/Users/leahko/react-workspace/covid-dashboard/src/index.js":"5","/Users/leahko/react-workspace/covid-dashboard/src/Components/Chart.js":"6","/Users/leahko/react-workspace/CovidDashboard-master/src/index.js":"7","/Users/leahko/react-workspace/CovidDashboard-master/src/App.js":"8","/Users/leahko/react-workspace/CovidDashboard-master/src/reportWebVitals.js":"9","/Users/leahko/react-workspace/CovidDashboard-master/src/Components/Covid.js":"10","/Users/leahko/react-workspace/CovidDashboard-master/src/Components/Covid.presenter.js":"11","/Users/leahko/react-workspace/CovidDashboard-master/src/Components/Chart.js":"12","/Users/leahko/react-workspace/CovidDashboard-master/src/Components/GenAge.js":"13"},{"size":435,"mtime":1606309484595,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1606230465169,"results":"16","hashOfConfig":"15"},{"size":834,"mtime":1606833297660,"results":"17","hashOfConfig":"15"},{"size":2547,"mtime":1606833310532,"results":"18","hashOfConfig":"15"},{"size":500,"mtime":1606230465168,"results":"19","hashOfConfig":"15"},{"size":1213,"mtime":1606830325329,"results":"20","hashOfConfig":"15"},{"size":570,"mtime":1607518286880,"results":"21","hashOfConfig":"22"},{"size":435,"mtime":1607260857056,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1606772140000,"results":"24","hashOfConfig":"22"},{"size":4465,"mtime":1607512800468,"results":"25","hashOfConfig":"22"},{"size":2988,"mtime":1607512776478,"results":"26","hashOfConfig":"27"},{"size":5626,"mtime":1607514233959,"results":"28","hashOfConfig":"27"},{"size":740,"mtime":1607261005007,"results":"29","hashOfConfig":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ttzfrs",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"lv5je9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4leqe9",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/leahko/react-workspace/covid-dashboard/src/App.js",[],"/Users/leahko/react-workspace/covid-dashboard/src/reportWebVitals.js",[],"/Users/leahko/react-workspace/covid-dashboard/src/Components/Covid.presenter.js",[],"/Users/leahko/react-workspace/covid-dashboard/src/Components/Covid.js",["59"],"/Users/leahko/react-workspace/covid-dashboard/src/index.js",[],"/Users/leahko/react-workspace/covid-dashboard/src/Components/Chart.js",[],"/Users/leahko/react-workspace/CovidDashboard-master/src/index.js",[],["60","61"],"/Users/leahko/react-workspace/CovidDashboard-master/src/App.js",[],"/Users/leahko/react-workspace/CovidDashboard-master/src/reportWebVitals.js",[],"/Users/leahko/react-workspace/CovidDashboard-master/src/Components/Covid.js",["62"],"import React, { useState } from \"react\";\nimport CovidPresenter from \"./Covid.presenter\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst Covid = () => {\n  const [lineChartData, setLineChartData] = useState([]);\n  const [ageData, setAgeData] = useState([]);\n  const [genData, setGenData] = useState([]);\n  const handleButtonClick = (startDt, endDt) => {\n    console.log(startDt, endDt);\n\n    setLineChart(startDt, endDt);\n    setGenAgeCase(startDt, endDt);\n  };\n\n  const setLineChart = async (startDt, endDt) => {\n    // console.log(\"clicked\");\n    console.log(\n      \"startDt:\" +\n        moment(startDt).format(\"YYYYMMDD\") +\n        \"/endDt:\" +\n        moment(endDt).format(\"YYYYMMDD\")\n    );\n    const url =\n      \"http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson\";\n    const ServiceKey =\n      \"pazBdlMEQ8jBn1ovS4UfBWEMzypVRd5jPd887GygCIAQWJYJWbzAcAn3w5jaYyPN3lwpX69kUb6dl3rbeMgAww%3D%3D\";\n    let pageNo = \"1\";\n    let numOfRows = \"10\";\n    let startCreateDt = moment(startDt).format(\"YYYYMMDD\");\n    let endCreateDt = moment(endDt).format(\"YYYYMMDD\");\n    let tmpArr = [];\n\n    console.log(\n      \"url\",\n      url +\n        \"?ServiceKey=\" +\n        ServiceKey +\n        \"&pageNo=\" +\n        pageNo +\n        \"&numOfRows=\" +\n        numOfRows +\n        \"&startCreateDt=\" +\n        startCreateDt +\n        \"&endCreateDt=\" +\n        endCreateDt\n    );\n\n    const response = await axios.get(\n      url +\n        \"?ServiceKey=\" +\n        ServiceKey +\n        \"&pageNo=\" +\n        pageNo +\n        \"&numOfRows=\" +\n        numOfRows +\n        \"&startCreateDt=\" +\n        startCreateDt +\n        \"&endCreateDt=\" +\n        endCreateDt\n    );\n    // console.log(response.data);\n\n    if (response.data.response.header.resultCode === \"00\") {\n      if (response.data.response.body.items.length !== 0) {\n        tmpArr = response.data.response.body.items.item;\n        if (tmpArr.length > 1) {\n          tmpArr.reverse();\n        } else {\n          tmpArr = [];\n          tmpArr.push(response.data.response.body.items.item);\n        }\n        setLineChartData(tmpArr);\n      } else {\n        console.log(\n          \"error : \",\n          response.data.response.header.resultCode,\n          response.data.response.header.resultMsg\n        );\n      }\n    }\n    // console.log(\"data\", data);\n  };\n\n  const setGenAgeCase = async (startDt, endDt) => {\n    console.log(\n      \"startDt:\" +\n        moment(startDt).format(\"YYYYMMDD\") +\n        \"/endDt:\" +\n        moment(endDt).format(\"YYYYMMDD\")\n    );\n    const url =\n      \"http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson\";\n    const ServiceKey =\n      \"pazBdlMEQ8jBn1ovS4UfBWEMzypVRd5jPd887GygCIAQWJYJWbzAcAn3w5jaYyPN3lwpX69kUb6dl3rbeMgAww%3D%3D\";\n    let pageNo = \"1\";\n    let numOfRows = \"10\";\n    let startCreateDt = moment(startDt).format(\"YYYYMMDD\");\n    let endCreateDt = moment(endDt).format(\"YYYYMMDD\");\n    let tmpArr = [];\n\n    console.log(\n      \"url\",\n      url +\n        \"?ServiceKey=\" +\n        ServiceKey +\n        \"&pageNo=\" +\n        pageNo +\n        \"&numOfRows=\" +\n        numOfRows +\n        \"&startCreateDt=\" +\n        startCreateDt +\n        \"&endCreateDt=\" +\n        endCreateDt\n    );\n\n    const response = await axios.get(\n      url +\n        \"?ServiceKey=\" +\n        ServiceKey +\n        \"&pageNo=\" +\n        pageNo +\n        \"&numOfRows=\" +\n        numOfRows +\n        \"&startCreateDt=\" +\n        endCreateDt +\n        \"&endCreateDt=\" +\n        endCreateDt\n    );\n    console.log(response.data);\n\n    if (response.data.response.header.resultCode === \"00\") {\n      let tmpAge = [];\n      let tmpGen = [];\n      // console.log(response.data.response.body.items.length);\n      if (response.data.response.body.items.length !== 0) {\n        tmpArr = response.data.response.body.items.item;\n        if (tmpArr === []) return;\n        if (tmpArr.length > 1) tmpArr.reverse();\n\n        tmpArr.map((i) => {\n          if (i.gubun === \"여성\" || i.gubun === \"남성\") {\n            tmpGen.push(i);\n          } else {\n            tmpAge.push(i);\n          }\n          // console.log(\"tmpGen\", tmpGen);\n          // console.log(\"tmpAge\", tmpAge);\n          setAgeData(tmpAge);\n          setGenData(tmpGen);\n        });\n      }\n    }\n  };\n\n  return (\n    <CovidPresenter\n      lineChartData={lineChartData}\n      genData={genData}\n      ageData={ageData}\n      handleButtonClick={handleButtonClick}\n    />\n  );\n};\n\nexport default Covid;\n","/Users/leahko/react-workspace/CovidDashboard-master/src/Components/Covid.presenter.js",[],"/Users/leahko/react-workspace/CovidDashboard-master/src/Components/Chart.js",[],"/Users/leahko/react-workspace/CovidDashboard-master/src/Components/GenAge.js",[],["63","64"],{"ruleId":"65","severity":1,"message":"66","line":71,"column":21,"nodeType":"67","messageId":"68","endLine":71,"endColumn":23},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"65","severity":1,"message":"66","line":142,"column":24,"nodeType":"67","messageId":"68","endLine":142,"endColumn":26},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["75"],"no-negated-in-lhs",["76"],["75"],["76"],"no-global-assign","no-unsafe-negation"]